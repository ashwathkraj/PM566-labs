install.packages(data.table)
install.packages("data")
install.packages("data.table")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
download.file("https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
"met_all.gz", method="libcurl", timeout = 60)
met <- data.table::fread("met_all.gz")
install.packages('R.utils')
library(R.utils)
download.file("https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
"met_all.gz", method="libcurl", timeout = 60)
met <- data.table::fread("met_all.gz")
install.packages("leaflet")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(R.utils)
library(leaflet)
library(readr)
foot(met)
dim(met)
head(met)
foot(met)
dim(met)
head(met)
tail(met)
names(met)
#3
names(met)
#4
met$elev
#4
summary(met$elev)
#3
str(met)
#4
summary(met[,8:13])
#3
str(met)
library(readr)
---
title: "lab3"
author: "Ashwath Raj"
date: "September 2, 2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(R.utils)
library(leaflet)
library(readr)
```
```{r}
download.file("https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
"met_all.gz", method="libcurl", timeout = 60)
met <- data.table::fread("met_all.gz")
```
```{r}
#2
dim(met)
head(met)
tail(met)
```
```{r}
#3
str(met)
```
```{r}
#4
summary(met[,8:13])
```
View(met)
dim(met[is.na(elev)])[1]/dim(met)[1]
col(met[elev])
col(met$elev)
(met$elev)
#4
summary(met[,8:13])
#4
summary(met[,8:13])
dim(met[is.na(elev)])[10]/dim(met)[10]
dim(met[is.na(temp)])[1]/dim(met)[1]
# dim(met[is.na(temp)])[1]/dim(met)[1]
met[met$elev==9999.0] <- NA
summary(met$elev)
met <- met[temp>-40]
summary(met$temp)
met <- data.table::fread("met_all.gz")
summary(met[,8:13])
# dim(met[is.na(temp)])[1]/dim(met)[1]
met[met$elev==9999.0] <- NA
summary(met$elev)
met <- met[temp>=-40]
summary(met$temp)
# dim(met[is.na(temp)])[1]/dim(met)[1]
met[met$elev==9999.0] <- NA
met <- met[temp>=-40]
summary(met$temp)
met <- met[temp>-40]
met2 <- met(order(temp))
met2 <- (order(met(temp))
met2 <- (order(met(temp)))
met2 <- met[order(temp)]
head(met2)
met <- met[temp> -17.2]
summary(met$temp)
met2 <- met[order(temp)]
head(met2)
elev <- met[elev == max(elev)]
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
hist(met$wind.sp)
hist(met$elev)
hist(met$temp)
hist(met$wind.sp)
hist(met$elev)
hist(met$temp)
hist(met$wind.sp)
hist(met$log(elev))
met %>% hist(log(elev))
hist(log(met$elev))
hist(log(met$elev))
hist(log(met$temp))
hist(log(met$wind.sp))
hist(wind.sp)
hist(met$wind.sp)
library(lubridate)
summary(elev$date)
elev$date <- with(elev, ymd_h(paste(year,month,day,hour,sep=' ')))
summary(elev$date)
plot(elev$date, elev$date, type = 'l')
plot(elev$date, elev$temp, type = 'l')
plot(elev$data, elev$wind.sp, type = 'l')
plot(elev$date, elev$wind.sp, type = 'l')
plot(elev$date, elev$temp, type = 'l'),
plot(elev$date, elev$temp, type = 'l')
plot(elev$date, elev$wind.sp, type = 'l')
plot(elev$date, elev$temp, type = 'l')
plot(elev$date, elev$wind.sp, type = 'l')
leaflet(elev) $>$
hist(met$elev)
hist(met$temp)
hist(met$wind.sp)
elev$date <- with(elev, ymd_h(paste(year,month,day,hour,sep=' ')))
summary(elev$date)
leaflet(elev) %>%
addProviderTiles('Esri.WorldImagery') %>%
addCircles(lat =~ lat, lng=~lon, opacity =1, fillOpacity =1, radius = 100)
---
title: "lab3"
author: "Ashwath Raj"
date: "September 2, 2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(R.utils)
library(leaflet)
library(readr)
library(lubridate)
```
```{r}
download.file("https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
"met_all.gz", method="libcurl", timeout = 60)
met <- data.table::fread("met_all.gz")
```
```{r}
#2
dim(met)
head(met)
tail(met)
```
```{r}
#3
str(met)
```
#4
- It looks like the elevation variable has observations with 9999.0, which is probably an indicator for missing. We should take a deeper look at the data dictionary to confirm. The wind speed variable is ok but there are a lot of missing data.
- After checking the data we should make the appropriate modifications. Replace elevations with 9999 as NA.
- At what elevation is the highest weather station?
The highest elevation is 4113 meters
- We also have the issue of the minimum temperature being -40C, so we should remove those observations.
- We again notice that there is a -17.2C temperature reading that seems suspicious.
```{r}
summary(met[,8:13])
# dim(met[is.na(temp)])[1]/dim(met)[1]
met[met$elev==9999.0] <- NA
summary(met$elev)
met <- met[temp> -15]
summary(met$temp)
met2 <- met[order(temp)]
head(met2)
```
#5
```{r}
```
#6 Summary Stats
```{r}
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
```
#7 Exploratory Graphs
```{r}
hist(met$elev)
hist(met$temp)
hist(met$wind.sp)
elev$date <- with(elev, ymd_h(paste(year,month,day,hour,sep=' ')))
summary(elev$date)
leaflet(elev) %>%
addProviderTiles('Esri.WorldImagery') %>%
addCircles(lat =~ lat, lng=~lon, opacity =1, fillOpacity =1, radius = 100)
```
```{r}
plot(elev$date, elev$temp, type = 'l')
plot(elev$date, elev$wind.sp, type = 'l')
```
met[temp <-15]
met$temp < -15
met[temp < -15]
met[temp < -15]
# met[temp < -15]
head(met$temp)
# met[temp < -15]
head(met2)
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
cor(elev$temp, elev$wind.sp, use= "complete")
elev <- met[elev == max(elev)]
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
View(met2)
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
elev <- met[elev == max(elev)]
# cor(elev$temp, elev$wind.sp, use= "complete")
# cor(elev$temp, elev$hour, use= "complete")
# cor(elev$temp, elev$day, use= "complete")
summary(met[,8:13])
# dim(met[is.na(temp)])[1]/dim(met)[1]
met[met$elev==9999.0] <- NA
summary(met$elev)
met2 <- met[temp> -15]
summary(met$temp)
met2 <- met[order(temp)]
head(met2)
# met[temp < -15]
head(met2)
#3
str(met)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(R.utils)
library(leaflet)
library(readr)
library(lubridate)
#2
dim(met)
head(met)
tail(met)
#3
str(met)
summary(met[,8:13])
# dim(met[is.na(temp)])[1]/dim(met)[1]
met[met$elev==9999.0] <- NA
summary(met$elev)
met2 <- met[temp> -15]
summary(met$temp)
met2 <- met[order(temp)]
head(met2)
# met[temp < -15]
head(met2)
# met[temp < -15]
head(met2)
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
hist(met$elev)
hist(met$temp)
hist(met$wind.sp)
elev$date <- with(elev, ymd_h(paste(year,month,day,hour,sep=' ')))
summary(elev$date)
leaflet(elev) %>%
addProviderTiles('Esri.WorldImagery') %>%
addCircles(lat =~ lat, lng=~lon, opacity =1, fillOpacity =1, radius = 100)
# elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use= "complete")
cor(elev$temp, elev$hour, use= "complete")
cor(elev$temp, elev$day, use= "complete")
View(elev)
View(elev)
cor(elev$temp, elev$wind.sp)
cor(elev$temp, elev$wind.sp, use = "pairwise.complete.obs")
elev <- met[elev == max(elev)]
cor(elev$temp, elev$wind.sp, use = "pairwise.complete.obs")
cor(elev$temp, elev$hour, use = "pairwise.complete.obs")
cor(elev$temp, elev$day, use = "pairwise.complete.obs")
